{"remainingRequest":"D:\\3-PROGRAM\\v\\v2\\node_modules\\babel-loader\\lib\\index.js!D:\\3-PROGRAM\\v\\v2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\3-PROGRAM\\v\\v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\3-PROGRAM\\v\\v2\\src\\components\\Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\3-PROGRAM\\v\\v2\\src\\components\\Map2.vue","mtime":1632036799369},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-flex xs4>\r\n    <v-card>\r\n      <div id=\"map\"></div>\r\n    </v-card>\r\n  </v-flex>\r\n</template>\r\n\r\n<script>\r\nimport $Scriptjs from 'scriptjs';\r\nimport { eventBus } from '@/event-bus.js';\r\nexport default {\r\n  name: \"Map\",\r\n  data() {\r\n    return {\r\n      map: null,\r\n      marker: null,\r\n      lastLat: null,\r\n      lastLng: null,\r\n      getNextPage: null,\r\n      // center around the Upper West Side, NYC\r\n      DEFAULT_LAT: 40.780,\r\n      DEFAULT_LNG: -73.974,\r\n      geocoder: null,\r\n      placesService: null,\r\n      mapGoogleGeometryMultiPoly: null,\r\n      mapNumGeometries: 0\r\n    }\r\n  },\r\n  mounted: function() {\r\n    // use your own key...\r\n    $Scriptjs(\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY_HERE&libraries=geometry,places\", () => {\r\n      this.initMap();\r\n    });\r\n    eventBus.$on('newTextAddress', (payload) => {\r\n      this.updateFromTextAddress(payload);\r\n    });\r\n    eventBus.$on('sendCityData', (payload) => {\r\n      this.renderCityMap(payload.coordinates);\r\n      this.setDataLayer(payload.multiPoly, payload.numGeometries);\r\n    })\r\n    eventBus.$on('launchKeywordSearch', (payload) => {\r\n      this.doKeywordSearch(payload);\r\n    })\r\n  },\r\n  methods: {\r\n    // simple way to sleep..\r\n    wait (timeout) {\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve()\r\n        }, timeout)\r\n      })\r\n    },\r\n    setDataLayer(googleGeometryMultiPoly, numGeometries) {\r\n      this.mapGoogleGeometryMultiPoly = googleGeometryMultiPoly;\r\n      this.mapNumGeometries = numGeometries;\r\n    },\r\n    updateFromTextAddress(payload) {\r\n      this.map.setCenter(payload.geometry.location);\r\n      this.updateMarker(payload.geometry.location);\r\n      this.lastLat = payload.geometry.location.lat();\r\n      this.lastLng = payload.geometry.location.lng();\r\n    },\r\n    renderCityMap(myCityData) {\r\n      myCityData.setMap(this.map);\r\n      // and pass clicks on to the underlying map\r\n      myCityData.addListener('click', (event) => {\r\n        google.maps.event.trigger(this.map, 'click', event);\r\n      });\r\n    },\r\n    initMap() {\r\n      this.geocoder = new google.maps.Geocoder();\r\n      this.map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        center: {\r\n          lat: this.DEFAULT_LAT,\r\n          lng: this.DEFAULT_LNG\r\n        },\r\n        zoom: 15,\r\n        gestureHandling: \"greedy\"\r\n      });\r\n      this.placesService = new google.maps.places.PlacesService(this.map);\r\n      google.maps.event.addListener(this.map, \"click\", (event) => {\r\n        this.lastLat = event.latLng.lat();\r\n        this.lastLng = event.latLng.lng();\r\n        this.updateMarker(event.latLng);\r\n        this.geocoder.geocode({'location': event.latLng}, (results, status) => {\r\n          if (results) {\r\n            eventBus.$emit('mapAddress', results);\r\n          }\r\n        });\r\n      });\r\n      // now we can init other things that depend on Google being loaded\r\n      // tell the event bus\r\n      eventBus.$emit('googleInit', {});\r\n    },\r\n    updateMarker(latLng) {\r\n      if (!this.marker) {\r\n        this.marker = new google.maps.Marker({\r\n          map: this.map\r\n        });\r\n      }\r\n      this.marker.setPosition(latLng);\r\n    },\r\n    searchResultMarkers(results) {\r\n      // if we have not pulled in City Boundaries, this is our default\r\n      let filteredresults = results;\r\n      if (this.mapNumGeometries > 0 && this.mapGoogleGeometryMultiPoly) {\r\n        filteredresults = [];\r\n        results.map((curPlace) => {          \r\n          for (let i = 0; i < this.mapNumGeometries; i++) {\r\n            if (google.maps.geometry.poly.containsLocation(\r\n              curPlace.geometry.location,\r\n              this.mapGoogleGeometryMultiPoly [i]) == true) {\r\n                filteredresults.push(curPlace);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      filteredresults.map((place) => {\r\n        let image = {\r\n          url: place.icon,\r\n          size: new google.maps.Size(71, 71),\r\n          origin: new google.maps.Point(0, 0),\r\n          anchor: new google.maps.Point(0, 0),\r\n          scaledSize: new google.maps.Size(15, 15)\r\n        };\r\n  \r\n        let marker = new google.maps.Marker({\r\n          map: this.map,\r\n          icon: image,\r\n          title: place.name,\r\n          position: place.geometry.location\r\n        });\r\n      })\r\n    },\r\n    doSearch(params) {\r\n      // yeah, I know, using _this ...\r\n      // I really dont like how Google sets up pagination for this (compared to Yelp and others)\r\n      // I should write this as a var pointing to a function definition etc...\r\n      let _this = this;\r\n      // see https://developers.google.com/maps/documentation/javascript/examples/place-search-pagination\r\n      this.placesService.nearbySearch(params,\r\n        async function (results, PlacesServiceStatus, PlaceSearchPagination) {\r\n          if (PlacesServiceStatus !== 'OK') return;\r\n          _this.searchResultMarkers(results);\r\n          if (PlaceSearchPagination.hasNextPage) {\r\n            // slight pause...\r\n            await _this.wait(100); \r\n            _this.getNextPage = PlaceSearchPagination.hasNextPage && function() {\r\n              PlaceSearchPagination.nextPage();\r\n            }\r\n          } else {  // null this so that we dont double up on api calls\r\n            _this.getNextPage = null;\r\n          }\r\n          // invoke...\r\n          if (_this.getNextPage) {\r\n            _this.getNextPage();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    googlePlacesSearch(keyword, radius = 1000) {\r\n      if (!keyword.trim()) return;\r\n      let params = {\r\n        location: new google.maps.LatLng(this.lastLat, this.lastLng),\r\n        radius: radius,\r\n        keyword: keyword\r\n      };\r\n      this.doSearch(params);\r\n    },\r\n    doKeywordSearch(keyword) {\r\n      // one could expand here to search other services besides Google...\r\n      this.googlePlacesSearch(keyword, 500);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  width: 90vw;\r\n  height: 50vw;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}