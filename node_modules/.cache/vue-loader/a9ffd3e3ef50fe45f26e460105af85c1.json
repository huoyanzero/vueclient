{"remainingRequest":"D:\\3-PROGRAM\\v\\v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\3-PROGRAM\\v\\v2\\src\\components\\Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\3-PROGRAM\\v\\v2\\src\\components\\Map2.vue","mtime":1632036799369},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\v\\v2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgJFNjcmlwdGpzIGZyb20gJ3NjcmlwdGpzJzsNCmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnQC9ldmVudC1idXMuanMnOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiTWFwIiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbWFwOiBudWxsLA0KICAgICAgbWFya2VyOiBudWxsLA0KICAgICAgbGFzdExhdDogbnVsbCwNCiAgICAgIGxhc3RMbmc6IG51bGwsDQogICAgICBnZXROZXh0UGFnZTogbnVsbCwNCiAgICAgIC8vIGNlbnRlciBhcm91bmQgdGhlIFVwcGVyIFdlc3QgU2lkZSwgTllDDQogICAgICBERUZBVUxUX0xBVDogNDAuNzgwLA0KICAgICAgREVGQVVMVF9MTkc6IC03My45NzQsDQogICAgICBnZW9jb2RlcjogbnVsbCwNCiAgICAgIHBsYWNlc1NlcnZpY2U6IG51bGwsDQogICAgICBtYXBHb29nbGVHZW9tZXRyeU11bHRpUG9seTogbnVsbCwNCiAgICAgIG1hcE51bUdlb21ldHJpZXM6IDANCiAgICB9DQogIH0sDQogIG1vdW50ZWQ6IGZ1bmN0aW9uKCkgew0KICAgIC8vIHVzZSB5b3VyIG93biBrZXkuLi4NCiAgICAkU2NyaXB0anMoImh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9WU9VUl9BUElfS0VZX0hFUkUmbGlicmFyaWVzPWdlb21ldHJ5LHBsYWNlcyIsICgpID0+IHsNCiAgICAgIHRoaXMuaW5pdE1hcCgpOw0KICAgIH0pOw0KICAgIGV2ZW50QnVzLiRvbignbmV3VGV4dEFkZHJlc3MnLCAocGF5bG9hZCkgPT4gew0KICAgICAgdGhpcy51cGRhdGVGcm9tVGV4dEFkZHJlc3MocGF5bG9hZCk7DQogICAgfSk7DQogICAgZXZlbnRCdXMuJG9uKCdzZW5kQ2l0eURhdGEnLCAocGF5bG9hZCkgPT4gew0KICAgICAgdGhpcy5yZW5kZXJDaXR5TWFwKHBheWxvYWQuY29vcmRpbmF0ZXMpOw0KICAgICAgdGhpcy5zZXREYXRhTGF5ZXIocGF5bG9hZC5tdWx0aVBvbHksIHBheWxvYWQubnVtR2VvbWV0cmllcyk7DQogICAgfSkNCiAgICBldmVudEJ1cy4kb24oJ2xhdW5jaEtleXdvcmRTZWFyY2gnLCAocGF5bG9hZCkgPT4gew0KICAgICAgdGhpcy5kb0tleXdvcmRTZWFyY2gocGF5bG9hZCk7DQogICAgfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIHNpbXBsZSB3YXkgdG8gc2xlZXAuLg0KICAgIHdhaXQgKHRpbWVvdXQpIHsNCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gew0KICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICByZXNvbHZlKCkNCiAgICAgICAgfSwgdGltZW91dCkNCiAgICAgIH0pDQogICAgfSwNCiAgICBzZXREYXRhTGF5ZXIoZ29vZ2xlR2VvbWV0cnlNdWx0aVBvbHksIG51bUdlb21ldHJpZXMpIHsNCiAgICAgIHRoaXMubWFwR29vZ2xlR2VvbWV0cnlNdWx0aVBvbHkgPSBnb29nbGVHZW9tZXRyeU11bHRpUG9seTsNCiAgICAgIHRoaXMubWFwTnVtR2VvbWV0cmllcyA9IG51bUdlb21ldHJpZXM7DQogICAgfSwNCiAgICB1cGRhdGVGcm9tVGV4dEFkZHJlc3MocGF5bG9hZCkgew0KICAgICAgdGhpcy5tYXAuc2V0Q2VudGVyKHBheWxvYWQuZ2VvbWV0cnkubG9jYXRpb24pOw0KICAgICAgdGhpcy51cGRhdGVNYXJrZXIocGF5bG9hZC5nZW9tZXRyeS5sb2NhdGlvbik7DQogICAgICB0aGlzLmxhc3RMYXQgPSBwYXlsb2FkLmdlb21ldHJ5LmxvY2F0aW9uLmxhdCgpOw0KICAgICAgdGhpcy5sYXN0TG5nID0gcGF5bG9hZC5nZW9tZXRyeS5sb2NhdGlvbi5sbmcoKTsNCiAgICB9LA0KICAgIHJlbmRlckNpdHlNYXAobXlDaXR5RGF0YSkgew0KICAgICAgbXlDaXR5RGF0YS5zZXRNYXAodGhpcy5tYXApOw0KICAgICAgLy8gYW5kIHBhc3MgY2xpY2tzIG9uIHRvIHRoZSB1bmRlcmx5aW5nIG1hcA0KICAgICAgbXlDaXR5RGF0YS5hZGRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHsNCiAgICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcih0aGlzLm1hcCwgJ2NsaWNrJywgZXZlbnQpOw0KICAgICAgfSk7DQogICAgfSwNCiAgICBpbml0TWFwKCkgew0KICAgICAgdGhpcy5nZW9jb2RlciA9IG5ldyBnb29nbGUubWFwcy5HZW9jb2RlcigpOw0KICAgICAgdGhpcy5tYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYXAiKSwgew0KICAgICAgICBjZW50ZXI6IHsNCiAgICAgICAgICBsYXQ6IHRoaXMuREVGQVVMVF9MQVQsDQogICAgICAgICAgbG5nOiB0aGlzLkRFRkFVTFRfTE5HDQogICAgICAgIH0sDQogICAgICAgIHpvb206IDE1LA0KICAgICAgICBnZXN0dXJlSGFuZGxpbmc6ICJncmVlZHkiDQogICAgICB9KTsNCiAgICAgIHRoaXMucGxhY2VzU2VydmljZSA9IG5ldyBnb29nbGUubWFwcy5wbGFjZXMuUGxhY2VzU2VydmljZSh0aGlzLm1hcCk7DQogICAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcih0aGlzLm1hcCwgImNsaWNrIiwgKGV2ZW50KSA9PiB7DQogICAgICAgIHRoaXMubGFzdExhdCA9IGV2ZW50LmxhdExuZy5sYXQoKTsNCiAgICAgICAgdGhpcy5sYXN0TG5nID0gZXZlbnQubGF0TG5nLmxuZygpOw0KICAgICAgICB0aGlzLnVwZGF0ZU1hcmtlcihldmVudC5sYXRMbmcpOw0KICAgICAgICB0aGlzLmdlb2NvZGVyLmdlb2NvZGUoeydsb2NhdGlvbic6IGV2ZW50LmxhdExuZ30sIChyZXN1bHRzLCBzdGF0dXMpID0+IHsNCiAgICAgICAgICBpZiAocmVzdWx0cykgew0KICAgICAgICAgICAgZXZlbnRCdXMuJGVtaXQoJ21hcEFkZHJlc3MnLCByZXN1bHRzKTsNCiAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgICAgfSk7DQogICAgICAvLyBub3cgd2UgY2FuIGluaXQgb3RoZXIgdGhpbmdzIHRoYXQgZGVwZW5kIG9uIEdvb2dsZSBiZWluZyBsb2FkZWQNCiAgICAgIC8vIHRlbGwgdGhlIGV2ZW50IGJ1cw0KICAgICAgZXZlbnRCdXMuJGVtaXQoJ2dvb2dsZUluaXQnLCB7fSk7DQogICAgfSwNCiAgICB1cGRhdGVNYXJrZXIobGF0TG5nKSB7DQogICAgICBpZiAoIXRoaXMubWFya2VyKSB7DQogICAgICAgIHRoaXMubWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7DQogICAgICAgICAgbWFwOiB0aGlzLm1hcA0KICAgICAgICB9KTsNCiAgICAgIH0NCiAgICAgIHRoaXMubWFya2VyLnNldFBvc2l0aW9uKGxhdExuZyk7DQogICAgfSwNCiAgICBzZWFyY2hSZXN1bHRNYXJrZXJzKHJlc3VsdHMpIHsNCiAgICAgIC8vIGlmIHdlIGhhdmUgbm90IHB1bGxlZCBpbiBDaXR5IEJvdW5kYXJpZXMsIHRoaXMgaXMgb3VyIGRlZmF1bHQNCiAgICAgIGxldCBmaWx0ZXJlZHJlc3VsdHMgPSByZXN1bHRzOw0KICAgICAgaWYgKHRoaXMubWFwTnVtR2VvbWV0cmllcyA+IDAgJiYgdGhpcy5tYXBHb29nbGVHZW9tZXRyeU11bHRpUG9seSkgew0KICAgICAgICBmaWx0ZXJlZHJlc3VsdHMgPSBbXTsNCiAgICAgICAgcmVzdWx0cy5tYXAoKGN1clBsYWNlKSA9PiB7ICAgICAgICAgIA0KICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tYXBOdW1HZW9tZXRyaWVzOyBpKyspIHsNCiAgICAgICAgICAgIGlmIChnb29nbGUubWFwcy5nZW9tZXRyeS5wb2x5LmNvbnRhaW5zTG9jYXRpb24oDQogICAgICAgICAgICAgIGN1clBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uLA0KICAgICAgICAgICAgICB0aGlzLm1hcEdvb2dsZUdlb21ldHJ5TXVsdGlQb2x5IFtpXSkgPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICAgIGZpbHRlcmVkcmVzdWx0cy5wdXNoKGN1clBsYWNlKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgICAgfQ0KICAgICAgZmlsdGVyZWRyZXN1bHRzLm1hcCgocGxhY2UpID0+IHsNCiAgICAgICAgbGV0IGltYWdlID0gew0KICAgICAgICAgIHVybDogcGxhY2UuaWNvbiwNCiAgICAgICAgICBzaXplOiBuZXcgZ29vZ2xlLm1hcHMuU2l6ZSg3MSwgNzEpLA0KICAgICAgICAgIG9yaWdpbjogbmV3IGdvb2dsZS5tYXBzLlBvaW50KDAsIDApLA0KICAgICAgICAgIGFuY2hvcjogbmV3IGdvb2dsZS5tYXBzLlBvaW50KDAsIDApLA0KICAgICAgICAgIHNjYWxlZFNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDE1LCAxNSkNCiAgICAgICAgfTsNCiAgDQogICAgICAgIGxldCBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHsNCiAgICAgICAgICBtYXA6IHRoaXMubWFwLA0KICAgICAgICAgIGljb246IGltYWdlLA0KICAgICAgICAgIHRpdGxlOiBwbGFjZS5uYW1lLA0KICAgICAgICAgIHBvc2l0aW9uOiBwbGFjZS5nZW9tZXRyeS5sb2NhdGlvbg0KICAgICAgICB9KTsNCiAgICAgIH0pDQogICAgfSwNCiAgICBkb1NlYXJjaChwYXJhbXMpIHsNCiAgICAgIC8vIHllYWgsIEkga25vdywgdXNpbmcgX3RoaXMgLi4uDQogICAgICAvLyBJIHJlYWxseSBkb250IGxpa2UgaG93IEdvb2dsZSBzZXRzIHVwIHBhZ2luYXRpb24gZm9yIHRoaXMgKGNvbXBhcmVkIHRvIFllbHAgYW5kIG90aGVycykNCiAgICAgIC8vIEkgc2hvdWxkIHdyaXRlIHRoaXMgYXMgYSB2YXIgcG9pbnRpbmcgdG8gYSBmdW5jdGlvbiBkZWZpbml0aW9uIGV0Yy4uLg0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCiAgICAgIC8vIHNlZSBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9tYXBzL2RvY3VtZW50YXRpb24vamF2YXNjcmlwdC9leGFtcGxlcy9wbGFjZS1zZWFyY2gtcGFnaW5hdGlvbg0KICAgICAgdGhpcy5wbGFjZXNTZXJ2aWNlLm5lYXJieVNlYXJjaChwYXJhbXMsDQogICAgICAgIGFzeW5jIGZ1bmN0aW9uIChyZXN1bHRzLCBQbGFjZXNTZXJ2aWNlU3RhdHVzLCBQbGFjZVNlYXJjaFBhZ2luYXRpb24pIHsNCiAgICAgICAgICBpZiAoUGxhY2VzU2VydmljZVN0YXR1cyAhPT0gJ09LJykgcmV0dXJuOw0KICAgICAgICAgIF90aGlzLnNlYXJjaFJlc3VsdE1hcmtlcnMocmVzdWx0cyk7DQogICAgICAgICAgaWYgKFBsYWNlU2VhcmNoUGFnaW5hdGlvbi5oYXNOZXh0UGFnZSkgew0KICAgICAgICAgICAgLy8gc2xpZ2h0IHBhdXNlLi4uDQogICAgICAgICAgICBhd2FpdCBfdGhpcy53YWl0KDEwMCk7IA0KICAgICAgICAgICAgX3RoaXMuZ2V0TmV4dFBhZ2UgPSBQbGFjZVNlYXJjaFBhZ2luYXRpb24uaGFzTmV4dFBhZ2UgJiYgZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAgIFBsYWNlU2VhcmNoUGFnaW5hdGlvbi5uZXh0UGFnZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0gZWxzZSB7ICAvLyBudWxsIHRoaXMgc28gdGhhdCB3ZSBkb250IGRvdWJsZSB1cCBvbiBhcGkgY2FsbHMNCiAgICAgICAgICAgIF90aGlzLmdldE5leHRQYWdlID0gbnVsbDsNCiAgICAgICAgICB9DQogICAgICAgICAgLy8gaW52b2tlLi4uDQogICAgICAgICAgaWYgKF90aGlzLmdldE5leHRQYWdlKSB7DQogICAgICAgICAgICBfdGhpcy5nZXROZXh0UGFnZSgpOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgKTsNCiAgICB9LA0KICAgIGdvb2dsZVBsYWNlc1NlYXJjaChrZXl3b3JkLCByYWRpdXMgPSAxMDAwKSB7DQogICAgICBpZiAoIWtleXdvcmQudHJpbSgpKSByZXR1cm47DQogICAgICBsZXQgcGFyYW1zID0gew0KICAgICAgICBsb2NhdGlvbjogbmV3IGdvb2dsZS5tYXBzLkxhdExuZyh0aGlzLmxhc3RMYXQsIHRoaXMubGFzdExuZyksDQogICAgICAgIHJhZGl1czogcmFkaXVzLA0KICAgICAgICBrZXl3b3JkOiBrZXl3b3JkDQogICAgICB9Ow0KICAgICAgdGhpcy5kb1NlYXJjaChwYXJhbXMpOw0KICAgIH0sDQogICAgZG9LZXl3b3JkU2VhcmNoKGtleXdvcmQpIHsNCiAgICAgIC8vIG9uZSBjb3VsZCBleHBhbmQgaGVyZSB0byBzZWFyY2ggb3RoZXIgc2VydmljZXMgYmVzaWRlcyBHb29nbGUuLi4NCiAgICAgIHRoaXMuZ29vZ2xlUGxhY2VzU2VhcmNoKGtleXdvcmQsIDUwMCk7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Map2.vue"],"names":[],"mappingsfile":"Map2.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-flex xs4>\r\n    <v-card>\r\n      <div id=\"map\"></div>\r\n    </v-card>\r\n  </v-flex>\r\n</template>\r\n\r\n<script>\r\nimport $Scriptjs from 'scriptjs';\r\nimport { eventBus } from '@/event-bus.js';\r\nexport default {\r\n  name: \"Map\",\r\n  data() {\r\n    return {\r\n      map: null,\r\n      marker: null,\r\n      lastLat: null,\r\n      lastLng: null,\r\n      getNextPage: null,\r\n      // center around the Upper West Side, NYC\r\n      DEFAULT_LAT: 40.780,\r\n      DEFAULT_LNG: -73.974,\r\n      geocoder: null,\r\n      placesService: null,\r\n      mapGoogleGeometryMultiPoly: null,\r\n      mapNumGeometries: 0\r\n    }\r\n  },\r\n  mounted: function() {\r\n    // use your own key...\r\n    $Scriptjs(\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY_HERE&libraries=geometry,places\", () => {\r\n      this.initMap();\r\n    });\r\n    eventBus.$on('newTextAddress', (payload) => {\r\n      this.updateFromTextAddress(payload);\r\n    });\r\n    eventBus.$on('sendCityData', (payload) => {\r\n      this.renderCityMap(payload.coordinates);\r\n      this.setDataLayer(payload.multiPoly, payload.numGeometries);\r\n    })\r\n    eventBus.$on('launchKeywordSearch', (payload) => {\r\n      this.doKeywordSearch(payload);\r\n    })\r\n  },\r\n  methods: {\r\n    // simple way to sleep..\r\n    wait (timeout) {\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve()\r\n        }, timeout)\r\n      })\r\n    },\r\n    setDataLayer(googleGeometryMultiPoly, numGeometries) {\r\n      this.mapGoogleGeometryMultiPoly = googleGeometryMultiPoly;\r\n      this.mapNumGeometries = numGeometries;\r\n    },\r\n    updateFromTextAddress(payload) {\r\n      this.map.setCenter(payload.geometry.location);\r\n      this.updateMarker(payload.geometry.location);\r\n      this.lastLat = payload.geometry.location.lat();\r\n      this.lastLng = payload.geometry.location.lng();\r\n    },\r\n    renderCityMap(myCityData) {\r\n      myCityData.setMap(this.map);\r\n      // and pass clicks on to the underlying map\r\n      myCityData.addListener('click', (event) => {\r\n        google.maps.event.trigger(this.map, 'click', event);\r\n      });\r\n    },\r\n    initMap() {\r\n      this.geocoder = new google.maps.Geocoder();\r\n      this.map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        center: {\r\n          lat: this.DEFAULT_LAT,\r\n          lng: this.DEFAULT_LNG\r\n        },\r\n        zoom: 15,\r\n        gestureHandling: \"greedy\"\r\n      });\r\n      this.placesService = new google.maps.places.PlacesService(this.map);\r\n      google.maps.event.addListener(this.map, \"click\", (event) => {\r\n        this.lastLat = event.latLng.lat();\r\n        this.lastLng = event.latLng.lng();\r\n        this.updateMarker(event.latLng);\r\n        this.geocoder.geocode({'location': event.latLng}, (results, status) => {\r\n          if (results) {\r\n            eventBus.$emit('mapAddress', results);\r\n          }\r\n        });\r\n      });\r\n      // now we can init other things that depend on Google being loaded\r\n      // tell the event bus\r\n      eventBus.$emit('googleInit', {});\r\n    },\r\n    updateMarker(latLng) {\r\n      if (!this.marker) {\r\n        this.marker = new google.maps.Marker({\r\n          map: this.map\r\n        });\r\n      }\r\n      this.marker.setPosition(latLng);\r\n    },\r\n    searchResultMarkers(results) {\r\n      // if we have not pulled in City Boundaries, this is our default\r\n      let filteredresults = results;\r\n      if (this.mapNumGeometries > 0 && this.mapGoogleGeometryMultiPoly) {\r\n        filteredresults = [];\r\n        results.map((curPlace) => {          \r\n          for (let i = 0; i < this.mapNumGeometries; i++) {\r\n            if (google.maps.geometry.poly.containsLocation(\r\n              curPlace.geometry.location,\r\n              this.mapGoogleGeometryMultiPoly [i]) == true) {\r\n                filteredresults.push(curPlace);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      filteredresults.map((place) => {\r\n        let image = {\r\n          url: place.icon,\r\n          size: new google.maps.Size(71, 71),\r\n          origin: new google.maps.Point(0, 0),\r\n          anchor: new google.maps.Point(0, 0),\r\n          scaledSize: new google.maps.Size(15, 15)\r\n        };\r\n  \r\n        let marker = new google.maps.Marker({\r\n          map: this.map,\r\n          icon: image,\r\n          title: place.name,\r\n          position: place.geometry.location\r\n        });\r\n      })\r\n    },\r\n    doSearch(params) {\r\n      // yeah, I know, using _this ...\r\n      // I really dont like how Google sets up pagination for this (compared to Yelp and others)\r\n      // I should write this as a var pointing to a function definition etc...\r\n      let _this = this;\r\n      // see https://developers.google.com/maps/documentation/javascript/examples/place-search-pagination\r\n      this.placesService.nearbySearch(params,\r\n        async function (results, PlacesServiceStatus, PlaceSearchPagination) {\r\n          if (PlacesServiceStatus !== 'OK') return;\r\n          _this.searchResultMarkers(results);\r\n          if (PlaceSearchPagination.hasNextPage) {\r\n            // slight pause...\r\n            await _this.wait(100); \r\n            _this.getNextPage = PlaceSearchPagination.hasNextPage && function() {\r\n              PlaceSearchPagination.nextPage();\r\n            }\r\n          } else {  // null this so that we dont double up on api calls\r\n            _this.getNextPage = null;\r\n          }\r\n          // invoke...\r\n          if (_this.getNextPage) {\r\n            _this.getNextPage();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    googlePlacesSearch(keyword, radius = 1000) {\r\n      if (!keyword.trim()) return;\r\n      let params = {\r\n        location: new google.maps.LatLng(this.lastLat, this.lastLng),\r\n        radius: radius,\r\n        keyword: keyword\r\n      };\r\n      this.doSearch(params);\r\n    },\r\n    doKeywordSearch(keyword) {\r\n      // one could expand here to search other services besides Google...\r\n      this.googlePlacesSearch(keyword, 500);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  width: 90vw;\r\n  height: 50vw;\r\n}\r\n</style>"]}]}