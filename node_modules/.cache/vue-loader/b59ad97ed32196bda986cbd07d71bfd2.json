{"remainingRequest":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\3-PROGRAM\\final\\project0919\\client\\v2\\src\\components\\SearchBox.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\src\\components\\SearchBox.vue","mtime":1632092541539},{"path":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\3-PROGRAM\\final\\project0919\\client\\v2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXV0byB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOjMwMHB4Owp9Ci5hMSB7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IGF1dG87CiAgYm9yZGVyOiAxcHggc29saWQgI2VlZWVlZTsKICB3aWR0aDozMDBweDsKICBoZWlnaHQ6IDEyMHB4OwogIG92ZXJmbG93OiBhdXRvOwp9CgoucmVzdWx0MSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiA0cHggMnB4OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLnJlc3VsdDE6aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICM0MDgwQkYJOwogIGNvbG9yOiB3aGl0ZTsKfQoKLmVycnsKICBkaXNwbGF5OmJsb2NrOwogIGNvbG9yOnJlZDsKfQo="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-row>\n    <b-col cols=\"12\">\n    <Map :lat1=\"lat2\" :lng1=\"lng2\" :title1=\"title\"></Map>\n      <input class=\"auto\" v-model=\"input\" @input=\"onChange\" @keydown.enter=\"confirm(input)\" type=\"text\"/>\n        <ul v-show=\"flag\" v-if=\"p_data\" class=\"a1\">\n          <li class=\"result1\" v-for=\"(result,i) in p_data\" :key=\"i\" @click=\"confirm(result)\">\n          <span v-html=\"highLight(result.Name)\"></span>\n          </li>\n        </ul>\n     <span v-if=\"error\" class=\"err\">{{error}}</span>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\nimport Map from './Map.vue'\nimport {gmapApi} from 'vue2-google-maps'\nexport default {\n  name: 'SearchBox',\n  components: {\n    Map\n  },\n  computed:{\n    google:gmapApi,\n    },\n  props: {\n    p_data: {\n      type:Array,\n      required:false,\n    }\n  },\n  data(){\n    return{\n      flag:false,\n      input:'',\n      search:\"\",\n      lat2:0,\n      lng2:0,\n      title:'',\n      error:'',\n    }\n  },\n\n  \n  methods:{\n    highLight(current) {\n      let reggie = new RegExp(this.input, \"gi\");\n      let found = current.search(reggie) !== -1;\n      return !found ? current : current.replace(reggie, function($1){return '<strong>' + $1 + '</strong>'});\n    },\n    onChange(){\n      this.error='';\n      this.$emit('search',this.input)\n      this.flag = true;\n    },\n    getLocation(){\n      var geocoder = new this.google.maps.Geocoder();\n      geocoder.geocode( { 'address': this.input}, (results, status) =>{\n      if (status == 'OK') {\n        this.lat2 = results[0].geometry.location.lat();\n        this.lng2 = results[0].geometry.location.lng();\n      } else {\n        this.error = 'Sorry not able to find the location';\n      }\n    });\n    },\n    confirm(result){\n      if(typeof(result)!='undefined'){\n        this.input = this.input==result?result:result.Name\n        this.flag = false;\n        this.title = this.input;\n        this.getLocation();\n      }\n      else{\n        this.error = 'Sorry not able to find the location';\n      }\n    },\n   \n  }\n}\n</script>\n<style>\n  .auto {\n    position: relative;\n    width:300px;\n  }\n  .a1 {\n    padding: 0;\n    margin: auto;\n    border: 1px solid #eeeeee;\n    width:300px;\n    height: 120px;\n    overflow: auto;\n  }\n\n  .result1 {\n    text-align: left;\n    padding: 4px 2px;\n    cursor: pointer;\n  }\n\n  .result1:hover {\n    background-color: #4080BF\t;\n    color: white;\n  }\n\n  .err{\n    display:block;\n    color:red;\n  }\n</style>\n"]}]}